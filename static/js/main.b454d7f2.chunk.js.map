{"version":3,"sources":["component/Square/Square.module.scss","App.module.scss","component/Board/Board.module.scss","logo.svg","component/Square/index.js","component/Square/Square.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Square","props","useState","Array","fill","boardSquares","setBoardSquares","console","log","xIsNext","setXIsNext","reset","setReset","status","winner","squares","winCondition","i","length","a","b","c","calclulateWinner","createSquare","index","className","styles","theButton","onClick","newValue","handleTheClick","navbar","resetGroup","theReset","resetButton","splice","board","row","App","page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b454d7f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Square_board__pa8RV\",\"theButton\":\"Square_theButton__3kHNh\",\"theReset\":\"Square_theReset__rjWGp\",\"row\":\"Square_row__2NaQS\",\"navbar\":\"Square_navbar__3oNjI\",\"status\":\"Square_status__CVEd0\",\"resetGroup\":\"Square_resetGroup__3onlf\",\"resetButton\":\"Square_resetButton__eyEfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1PMlz\",\"App-logo\":\"App_App-logo__RcX2g\",\"App-logo-spin\":\"App_App-logo-spin__tyGXI\",\"App-header\":\"App_App-header__2cwMd\",\"App-link\":\"App_App-link__3tPlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Board_row__x35pW\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Square from \"./Square\";\n\nexport default Square;\n","import React from \"react\";\nimport styles from \"./Square.module.scss\";\nimport { useState } from 'react';\n\nconst Square = (props) => {\n\n  // const { onclick, value } = props\n\n  // const [value, setValue] = useState(null)\n\n  // const handleValue = () => {\n    // if(value === null ) {\n      // return setValue(\"X\")\n    // } else if( value === \"X\") {\n      // return setValue(\"O\")\n    // } else if(value === \"O\") {\n      // return setValue(\"X\")\n    // }\n  // }\n// \n  // const createSquare = () => {\n    // return <button onClick={() => handleValue()}>{value}</button>\n  // }\n  const [boardSquares, setBoardSquares] = useState(Array(9).fill(null))\n  console.log(boardSquares)\n  const [xIsNext, setXIsNext] = useState(true)\n\n  const [reset, setReset] = useState(\"Click to reset game\")\n  \n  console.log(boardSquares)\n\n\n\n  const handleTheClick = (index) => {\n     console.log(index)\n    \n    let squares = boardSquares\n\n    console.log(squares)\n\n    if(squares[index]) return\n\n    let newValue = squares[index] = xIsNext ? \"X\" : \"O\";\n\n    setXIsNext(!xIsNext)\n\n    setBoardSquares(squares)\n\n    console.log(squares)\n    console.log(newValue)\n    \n    setReset(\"Click to reset game\")\n   \n\n  }\n\n  \n  const calclulateWinner = (squares) => {\n\n    let winCondition = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for( let i = 0; i < winCondition.length; i++) {\n    const [a, b, c] = winCondition[i]\n    if( squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a]\n    }\n  }\n  return null\n}\n\n\n  let status = null;\n\n  const winner = calclulateWinner(boardSquares);\n\n  status = winner ? `Winner is ${winner}`: `Next Player: ${xIsNext ? \"X\" : \"O\"}`;\n\n\n\n  // const handleTheClick = (index) => {\n    // boardSquares[index] = xIsNext ? \"X\" : \"O\"\n// \n    // console.log(boardSquares)\n// \n  // }\n\n  // const handleClick = (index) => {\n//  \n    // const squares = [...boardSquares];\n// \n    // console.log(squares)\n// \n    // if(squares[index]) return;\n// \n    // console.log(squares)\n// \n    // squares[index] = xIsNext ? \"X\" : \"O\";\n// \n    // console.log(squares)\n// \n    // setBoardSquares(squares);\n// \n    // console.log(squares)\n// \n    // setXIsNext(!xIsNext);\n  // };\n\n\n  const createSquare = (index) => {\n    return <button className={styles.theButton} onClick={ () => handleTheClick(index)}>{boardSquares[index]}</button>\n  }\n\n  const resetGame = () => {\n    boardSquares.splice(0, boardSquares.length)\n    console.log(boardSquares)\n   \n    boardSquares.fill(null, 9)\n    console.log(boardSquares)\n\n    setReset(\"Click on a square to start new game\")\n    \n    \n  }\nconsole.log(boardSquares)\n  return (\n    <section>\n      <nav className={styles.navbar}>\n    <div>\n      <h2 className={styles.status}>{status}</h2>\n    </div>    \n    <div className={styles.resetGroup}>\n    <h2 className={styles.theReset}>\n        {reset}\n    </h2>\n      <button className={styles.resetButton} onClick={() => resetGame()}>Reset</button>\n    </div>\n    </nav>\n    <section className={styles.board}>\n  <div className={styles.row}>\n    {createSquare(0)} {createSquare(1)} {createSquare(2)} \n  </div>\n  <div className={styles.row}>\n    {createSquare(3)} {createSquare(4)} {createSquare(5)} \n  </div>\n  <div className={styles.row}>\n    {createSquare(6)} {createSquare(7)} {createSquare(8)} \n  </div>\n  </section>\n\n  </section>\n\n    \n);\n  };\n\nexport default Square;\n","import logo from './logo.svg';\nimport Square from './component/Square';\nimport Board from './component/Board';\nimport { useState } from 'react';\nimport styles from './App.module.scss'\n\nfunction App() {\n\n  return (\n    <div className={styles.page}>\n      <Square />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}